# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
jobs:
  integration_test:
    docker:
      - image: continuumio/miniconda3
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: apt-get update; apt-get install make -y
      - run: make setup_conda
      - run: . /opt/conda/etc/profile.d/conda.sh && conda activate mozfldp && python setup.py install && make pytest
      - store_artifacts:
          path: test-reports
          destination: test-reports

# version: 2
# jobs:
#   build:
#     docker:
#       # specify the version you desire here
#       # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
#       - image: circleci/python:3.6.1

#       # Specify service dependencies here if necessary
#       # CircleCI maintains a library of pre-built images
#       # documented at https://circleci.com/docs/2.0/circleci-images/
#       # - image: circleci/postgres:9.4

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "requirements.txt" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run:
#           name: install dependencies
#           command: |
#             python3 -m venv venv
#             . venv/bin/activate
#             pip install -r requirements.txt

#       - save_cache:
#           paths:
#             - ./venv
#           key: v1-dependencies-{{ checksum "requirements.txt" }}

#       # run tests!
#       # this uses PyTest
#       - run:
#           name: run tests
#           command: |
#             . venv/bin/activate
#             pytest

#       - store_artifacts:
#           path: test-reports
#           destination: test-reports
